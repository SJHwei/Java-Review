package com.company.面向对象.类之间的关系;

/**
 * 类之间的关系(六种):
 *   (1) 泛化关系: 类和类之间的继承关系以及接口与接口之间的继承关系.
 *   (2) 实现关系: 类对接口的实现.
 *   (3) 关联关系: 类与类之间的连接, 一个类可以知道另一个类的属性和方法, 在java语言中使用成员变量体现.
 *       (在当前类中含有其他类的引用, 在当前类中含有指向其他对象的引用.)
 *   (4) 聚合关系: 是关联关系的一种, 是较强的关联关系, 是整体和部分的关系.
 *       1> 聚合关系特点: 整体不依赖部分, 部分也不会依赖整体, 整体无法决定部分的声明; 强调一对多, 而关联关系可以一对一.
 *       2> 与关联关系的区别: 关联关系的类处在同一个层次上, 而聚合关系的类处在不平等的层次上, 一个代表整体, 一个代表部分, 在java语言中使用实例变量体现.
 *       3> 例子: 教室和学生的关系就是一种聚合关系.
 *   (5) 合成关系: 是关联关系的一种, 比聚合关系强的关联关系.
 *       1> 整体对象决定部分对象的声明周期, 部分对象每一时刻只与一个对象发生合成, 在java语言中使用实例变量体现.
 *       2> 与聚合关系的区别: 整体和部分是紧密相连的, 整体的声明周期决定部分的声明周期.
 *       3> 例子: 人和四肢的关系就是一种合成关系.
 *   (6) 依赖关系: 依赖关系是比关联关系弱的关系, 在java语言中体现为返回值, 参数, 局部变量和静态方法的调用.
 * */
public class 类之间的关系 {
}
