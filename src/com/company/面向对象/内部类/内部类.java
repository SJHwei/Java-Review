package com.company.面向对象.内部类;

/**
 * 内部类的作用: 可以访问外部类中私有的数据.
 *
 * 1. 静态内部类(类内, static修饰)
 *   (1) 作用: 静态内部类可以等同看做静态变量, 可以直接访问外部类的静态数据, 但是无法直接访问成员.
 *   (2) 修饰: 静态内部类可以用四种访问控制权限修饰符修饰, 而一般类只能使用public和default方式.
 *   (3) 访问: 两种访问, 一种是静态内部类访问外部类(主动); 另一种是访问静态内部类(被动).
 *       1) 静态内部类访问外部类: 只能访问外部类的静态数据
 *       2) 访问静态内部类: 访问静态内部类要使用"."将外部类和内部类连接起来.
 *           a. 访问静态内部类中的静态的东西: 外部类类名.内部类类名.
 *           b. 访问静态内部类中的成员的东西: 创建对象 new 外部类类名.内部类类名()
 *           c. 注意: 类的一个很重要的作用就是创建对象, 所以对于静态类, 它当然也可以创建对象.
 *           d. 注意: 静态内部类的静态指定是访问时不需要外部类创建对象就可以通过外部类类名.的方式访问.
 *   (4) 结果: 生成的内部类class文件的名字格式: 外部类类名$内部类类名.class
 *   (5) 包含: 静态内部类可以含有静态声明和非静态声明.
 *
 * 2. 成员内部类(类内)
 *   (1) 作用: 成员内部类可以等同看做成员变量, 可以访问外部类所有的数据.
 *   (2) 修饰: 成员内部类可以用四种访问控制权限的修饰符修饰.
 *   (3) 访问: 两种访问, 一种是成员内部类访问外部类(主动); 另一种是访问成员内部类(被动).
 *       1) 成员内部类访问外部类: 可以访问外部类的所有数据
 *       2) 访问成员内部类: 首先要创建外部类对象, 通过 外部类对象.new 创建内部类对象.
 *   (4) 重点: 成员内部类中不能有静态声明.
 *   (5) 包含: 成员内部类中可以含有非静态声明, 但是不能含有静态声明.
 *
 * 3. 局部内部类(方法内)
 *   (1) 作用: 局部内部类等同于局部变量.
 *   (2) 修饰: 局部内部列不能使用访问控制权限修饰符修饰.
 *   (3) 访问: 创建局部内部类/调用局部内部类方法只能在方法内部进行, 因为都是局部的.
 *       访问局部内部类的方式: 通过调用外部类的方法, 执行方法时访问内部类.
 *   (4) 重点: 两个重点.
 *       第一个重点: 局部内部类在访问局部变量的时候, 局部变量必须使用final修饰.
 *       第二个重点: 局部内部类中不能有静态声明.
 *   (5) 包含: 局部内部类中可以含有非静态声明, 但是不能含有静态声明. 和成员内部类相同.
 *
 * 4. 匿名内部类
 *   (1) 定义: 指的是没有名字的内部类.
 *   (2) 优点: 少定义一个类.
 *   (3) 缺点: 无法重复使用.
 *
 * */

public class 内部类 {
}

