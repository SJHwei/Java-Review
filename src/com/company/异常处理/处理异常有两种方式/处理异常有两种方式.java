package com.company.异常处理.处理异常有两种方式;

/**
 * 1. 声明抛出throws:
 *    (1) 声明抛出, 在方法声明的位置上使用throws关键字向上抛出异常.
 *    (2) 思考: java编译器是如何知道一段代码执行过程中可能出现异常, java编译器是如何知道这个异常发生的几率比较高呢?
 *        答: java中, 在类的可能出现异常的方法的声明位置上上使用了throws抛出了异常.
 *    (3) java编译器不是那么智能, 因为fileinputstream这个构造方法在声明位置上使用了throws filenotfoundexception.
 *    (4) 深入throws(实例):
 *        1> 使用throws处理异常不是真正处理异常而是推卸责任.
 *        2> 谁调用的就会抛给谁.
 *        3> 一直向上抛, 如果没有方法处理(try...catch...), 则最后main方法抛给JVM, 如果最后抛给了JVM, JVM遇到这个异常就会退出JVM. JVM负责将该对象的信息打印到控制台. JVM停掉了程序的运行.
 *        4> 一个方法可以throws多个异常.
 *        5> 真正处理要使用try...catch...
 *
 * 2. 捕捉try...catch...:
 *    (1) 语法: try {可能出现异常的代码;}catch(异常类型1 变量) {处理异常的代码;}catch(异常类型2 变量) {处理异常的代码;}...
 *    (2) catch语句块可以写多个, 但是从上到下, 必须从小类型异常到大类型异常进行捕捉.
 *    (3) try...catch...中最多执行一个catch语句块. 执行结束后try...catch...就结束了.
 *    (4) try中一行代码出现了异常, try语句块汇总异常代码之后的代码不再继续执行, 直接进入catch语句块中执行.
 *
 * */
public class 处理异常有两种方式 {
}
